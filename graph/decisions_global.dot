digraph G {

	any_state_global [label = "Any state", color = green];

	subgraph cluster_0 {
		color=black
		node [style=filled];
		no_pawn1 [label = "No pawn", color = green];
	        goto_release1 [label = "Go to release", color = green];
        	go_back1 [label = "Go back", color = green];
        	intermediate_release1 [label = "Intermediate release", color = green];

        	no_pawn1 -> no_pawn1 [label = "move done"];

        	no_pawn1 -> goto_release1 [label = "1st pawn detected"];
		
                no_pawn1 -> intermediate_release1 [label = "2nd pawn detected"];		
        	intermediate_release1 -> goto_release1 [label = "move done"];

        	goto_release1 -> go_back1 [label = "move done"];

        	go_back1 -> no_pawn1 [label = "only 1 pawn moved"];
		label = "Secure phase";
	}

	subgraph cluster_1 {
		node [style=filled];
		no_pawn2  [label = "No pawn", color = green];
		take_pawn2  [label = "Take pawn", color = green];
		go_back2  [label = "Go back", color = green];
		back2  [label = "Back"];
		find_pawn2  [label = "Find pawn", color = green];
		release_on_bonus2  [label = "Release on bonus", color = green];
		release2  [label = "Release", color = green];
		any_states2  [label = "Any state", color = red];
		avoiding2  [label = "Avoiding", color = red];

		
		no_pawn2 -> take_pawn2 [label = "move done"];
		take_pawn2 -> go_back2 [label = "move done"];
		
		go_back2 -> release2 [label = "pawn"];
		go_back2 -> release_on_bonus2 [label = "queen"];
		go_back2 -> find_pawn2 [label = "king"];
		
		find_pawn2 -> find_pawn2 [label = "pawn \nnot found"];

		find_pawn2 -> release2 [label = "pawn found"];	
		release2 -> back2 [label = "move done"];
		back2 -> no_pawn2 [label = "move done"];
		
		release_on_bonus2 -> release2 [label = "move done"];
		
		any_states2 -> avoiding2;

		label = "Tower phase";
		color=black
	}

        subgraph cluster_2 {
                node [style=filled];
                no_pawn3 [label = "TODO"];
                take_pawn3 [label = "TODO"];

                no_pawn3 -> take_pawn3;


                label = "Bonus phase";
                color=black
        }


	start -> no_pawn1;
        go_back1 -> no_pawn2 [label = "2 pawn have been placed"];
	back2 -> no_pawn3 [label = "All pawn in green \nzone taken", color = red];
	take_pawn3 -> end;

	any_state_global -> end [label = "90 secondes"];

	start [shape=Mdiamond];
	end [shape=Msquare];
}

