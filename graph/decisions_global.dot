digraph G {

	any_state_global [label = "Any state", color = green];

	subgraph cluster_0 {
		color=black
		node [style=filled];
		no_pawn1 [label = "No pawn"];
	        goto_release1 [label = "Go to release"];
        	go_back1 [label = "Go back"];

        	no_pawn1 -> no_pawn1 [label = "move done"];

        	no_pawn1 -> goto_release1 [label = "pawn detected"];

        	goto_release1 -> go_back1 [label = "move done"];

        	go_back1 -> no_pawn1 [label = "only 1 pawn moved"];
		label = "Secure phase";
	}

	subgraph cluster_1 {
		node [style=filled];
		no_pawn2  [label = "No pawn"];
		take_pawn2  [label = "Take pawn"];
		go_back2  [label = "Go back"];
		back2  [label = "Back"];
		find_pawn2  [label = "Find pawn"];
		tmp_pawn2  [label = "Tmp pawn"];
		stack2  [label = "Stack"];
		release_on_bonus2  [label = "Release on bonus"];
		release2  [label = "Release"];
		any_states2  [label = "Any state", color = red];
		turning_direction2  [label = "Turning direction"];
		avoiding2  [label = "Avoiding", color = red];
		take_king2  [label = "Take king"];

		
		no_pawn2 -> turning_direction2 [label = "move done"];
		turning_direction2 -> take_pawn2 [label = "move done"];
		take_pawn2 -> go_back2 [label = "move done"];
		
		go_back2 -> tmp_pawn2 [label = "got 2nd pawn & king stored"];
		go_back2 -> tmp_pawn2 [label = "2nd pawn"];
		go_back2 -> tmp_pawn2 [label = "got king & NO pawn stored"];
		go_back2 -> stack2 [label = "got king & pawn stored"];
		go_back2 -> release_on_bonus2 [label = "first pawn"];
		go_back2 -> find_pawn2 [label = "first king"];

		find_pawn2 -> release2 [label = "pawn found"];	
		release2 -> back2 [label = "move done"];
		back2 -> no_pawn2 [label = "move done"];
		
		tmp_pawn2 -> back2 [label = "move done"];		

		stack2 -> release_on_bonus2;
		
		release_on_bonus2 -> release2 [label = "move done"];
		
		back2 -> take_king2;
		take_king2 -> stack2;

		any_states2 -> avoiding2;

		label = "Tower phase";
		color=black
	}

        subgraph cluster_2 {
                node [style=filled];
                no_pawn3 [label = "TODO"];
                take_pawn3 [label = "TODO"];

                no_pawn3 -> take_pawn3;


                label = "Bonus phase";
                color=black
        }


	start -> no_pawn1;
        go_back1 -> no_pawn2 [label = "2 pawn have been placed"];
	back2 -> no_pawn3 [label = "All pawn in green zone taken", color = red];
	take_pawn3 -> end;

	any_state_global -> end [label = "90 secondes"];

	start [shape=Mdiamond];
	end [shape=Msquare];
}

